---
import MainLayout from '@layouts/MainLayout.astro'
import PageWrap from '@layouts/PageWrap.astro'

const pageData = {
	title: 'Contact Us',
	bgColor: 'bg-sb-space-blue',
	slug: 'contact'
}
---

<style>
	/* reset */
	#fs-frm input,
	#fs-frm select,
	#fs-frm textarea,
	#fs-frm fieldset,
	#fs-frm optgroup,
	#fs-frm label,
	#fs-frm #card-element:disabled {
		font-family: inherit;
		font-size: 100%;
		border: none;
		border-radius: 0;
		display: block;
		width: 100%;
		padding: 0;
		margin: 0;
		-webkit-appearance: none;
		-moz-appearance: none;
	}
	#fs-frm label,
	#fs-frm legend,
	#fs-frm ::placeholder {
		font-size: 1rem;
		margin-bottom: 0.75rem;
		padding-top: 0.2rem;
		display: flex;
		align-items: baseline;
	}

	/* border, padding, margin, width */
	#fs-frm input,
	#fs-frm select,
	#fs-frm textarea,
	#fs-frm #card-element {
		border: 1px solid rgba(0, 0, 0, 0.2);
		background-color: rgba(255, 255, 255, 0.9);
		padding: 0.5em 1rem;
		margin-bottom: 1.5rem;
	}
	#fs-frm input:focus,
	#fs-frm select:focus,
	#fs-frm textarea:focus {
		background-color: white;
		outline-style: solid;
		outline-width: thin;
		outline-color: gray;
		outline-offset: -1px;
	}
	#fs-frm [type='text'],
	#fs-frm [type='email'] {
		width: 100%;
	}
	#fs-frm [type='button'],
	#fs-frm [type='submit'],
	#fs-frm [type='reset'] {
		width: auto;
		cursor: pointer;
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	#fs-frm [type='button']:focus,
	#fs-frm [type='submit']:focus,
	#fs-frm [type='reset']:focus {
		outline: none;
	}
	#fs-frm [type='submit'],
	#fs-frm [type='reset'] {
		margin-bottom: 0;
	}
	#fs-frm select {
		text-transform: none;
	}

	#fs-frm input,
	#fs-frm [type='text'],
	#fs-frm [type='email'] {
		font-size: 1.4rem !important;
		color: #353535;
		font-weight: 500;
	}

	#fs-frm textarea {
		font-size: 1.2rem !important;
		color: #353535;
		font-weight: 400;
	}

	#fs-frm [type='checkbox'] {
		-webkit-appearance: checkbox;
		-moz-appearance: checkbox;
		appearance: checkbox;
		display: inline-block;
		width: auto;
		margin: 0 0.5em 0 0 !important;
	}

	#fs-frm [type='radio'] {
		-webkit-appearance: radio;
		-moz-appearance: radio;
		appearance: radio;
	}

	/* address, locale */
	#fs-frm fieldset.locale input[name='city'],
	#fs-frm fieldset.locale select[name='state'],
	#fs-frm fieldset.locale input[name='postal-code'] {
		display: inline;
	}
	#fs-frm fieldset.locale input[name='city'] {
		width: 52%;
	}
	#fs-frm fieldset.locale select[name='state'],
	#fs-frm fieldset.locale input[name='postal-code'] {
		width: 20%;
	}
	#fs-frm fieldset.locale input[name='city'],
	#fs-frm fieldset.locale select[name='state'] {
		margin-right: 3%;
	}
</style>

<MainLayout>
	<PageWrap pageData={pageData}>
		<section class="content-outer pb-24 pt-6">
			<form id="fs-frm" name="sb-contact-form" accept-charset="utf-8" action="" method="POST">
				<label for="full-name" class="mb-2 text-lg font-medium text-sb-pear">Full Name:</label>
				<input type="text" name="name" id="full-name" placeholder="First and Last" required="" />
				<label class="mb-2 text-lg font-medium text-sb-pear">
					Email:
					<input type="email" id="email" name="email" placeholder="me@domain.com" required="" />
				</label>
				<label for="telephone" class="mb-2 text-lg font-medium text-sb-pear"
					>Telephone Number (Optional):</label
				>
				<input type="telephone" name="telephone" id="telephone" placeholder="(###) ###-####" />
				<label for="subject" class="mb-2 text-lg font-medium text-sb-pear">Subject:</label>
				<input type="text" name="subject" id="subject" placeholder="Subject" required="" />
				<label class="mb-2 text-lg font-medium text-sb-pear">
					Message:
					<textarea
						name="message"
						id="message"
						placeholder="All systems nominal. We are go for launch."
						required=""></textarea>
				</label>
				<!-- your other form fields go here -->
				<input type="text" name="message-type" id="message-type" style="display:none" />
				<button class="btn-primary !w-full bg-sb-green !text-sm lg:!text-xl" type="submit"
					>Send Us A Message</button
				>
			</form>
			<div
				class="form-success flex hidden flex-col items-center justify-center rounded-full bg-sb-space-blue-700 p-12 text-center"
			>
				<h2
					class="my-2 text-center font-archivo-expanded text-lg font-normal uppercase text-sb-jasmine"
				>
					Thank you for your message!
				</h2>
				<p class="text-lg text-sb-jasmine">We will get back to you as soon as possible.</p>
			</div>
		</section>
	</PageWrap>
</MainLayout>

<script>
	const contactForm = document.getElementById('fs-frm')
	const formSuccess = document.querySelector('.form-success')

	document.getElementById('telephone').addEventListener('blur', function (e) {
		var x = e.target.value.replace(/\D/g, '').match(/(\d{3})(\d{3})(\d{4})/)
		e.target.value = '(' + x[1] + ') ' + x[2] + '-' + x[3]
	})

	const token = import.meta.env.PUBLIC_SENDER_TOKEN

	contactForm.addEventListener('submit', function (event) {
		event.preventDefault()
		const email = document.getElementById('email').value
		const name = document.getElementById('full-name').value
		const subject = document.getElementById('subject').value
		const message = document.getElementById('message').value
		const telephone = document.getElementById('telephone').value
		const messageType = document.getElementById('message-type').value

		if (messageType && messageType !== '') {
			return
		}

		const getFormUrl = new URL('https://getform.io/f/682d1edc-d2f1-4816-9642-d6bfae71a2d6')
		const url = new URL('https://api.sender.net/v2/subscribers')

		const formData = new FormData(contactForm)

		function sendToGetForm(url, formData) {
			fetch(getFormUrl, {
				method: 'POST',
				// headers: {
				// 	'Content-Type': 'formdata'
				// },
				body: formData
			}).then((response) => {
				console.log('response', response)
				if (response.status === 200) {
					contactForm.style.display = 'none'
					formSuccess.style.display = 'block'
					setTimeout(() => {
						contactForm.style.display = 'block'
						formSuccess.style.display = 'none'
					}, 3000)

					contactForm.reset()
				}
			})
			// 	console.log('response', response)
			// 	if (.success) {
			// 		contactForm.style.display = 'none'
			// 		formSuccess.style.display = 'block'
			// 		setTimeout(() => {
			// 			contactForm.style.display = 'flex'
			// 			formSuccess.style.display = 'none'
			// 		}, 3000)
			// 	}
			// })
		}

		sendToGetForm(getFormUrl, formData)

		let senderData = {
			email: email,
			trigger_automation: false
		}

		function sendToSender(url, data) {
			fetch(url, {
				method: 'POST',
				headers: {
					Authorization: `Bearer ${token}`,
					'Content-Type': 'application/json',
					Accept: 'application/json'
				},
				body: JSON.stringify(data)
			}).then((response) => {
				response.json().then((data) => {
					console.log('data', data)
				})
			})
		}

		sendToSender(url, senderData)

		contactForm.reset()
	})
</script>
